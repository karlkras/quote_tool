<?php

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-10-28 at 22:55:55.
 */
class BaseQuoteLineItemTest extends PHPUnit_Framework_TestCase {

    /**
     * @var QuoteLineItem
     */
    protected $object;
    private $currentItemEnum;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->currentItemEnum = QuoteLineItemEnum::enum()->tr_ce_fuzzy_text;
        $this->object = QuoteLineItem::withWords($this->currentItemEnum, 33, new QuoteInfoClass()) ;
        $this->object->setDefaultRushFeePercentage(0.25);
        $this->object->setBaseRatePerUnit(0.08);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    /**
     * @covers QuoteLineItem::withDays  
     */
    public function testShouldReportLineItemAsDays() {
        $dayObject = QuoteLineItem::withDays(QuoteLineItemEnum::enum()->tr_ce_fuzzy_text, 2003, new QuoteInfoClass());
        $this->assertEquals(
                "days", $dayObject->getWorkUnitType()
        );
    }

    /**
     * @covers QuoteLineItem::withPages
     */
    public function testShouldReportLineItemAsPages() {
        $pageObject = QuoteLineItem::withPages(QuoteLineItemEnum::enum()->tr_ce_fuzzy_text, 2003, new QuoteInfoClass());
        $this->assertEquals(
                "pages", $pageObject->getWorkUnitType()
        );
    }

    /**
     * @covers QuoteLineItem::withHours
     */
    public function testShouldReportLineItemAsHours() {
        $hourObject = QuoteLineItem::withHours(QuoteLineItemEnum::enum()->tr_ce_fuzzy_text, 2003, new QuoteInfoClass());
        $this->assertEquals(
                "hours", $hourObject->getWorkUnitType()
        );
    }

    /**
     * @covers QuoteLineItem::get_name
     */
    public function testShouldProperlyReportLineItemName() {
        $this->assertEquals(
                $this->currentItemEnum->getName(), $this->object->getName()
        );
    }

    /**
     * @covers QuoteLineItem::set_workUnitCount
     */
    public function testShouldSuccessfullyChangeLineItemUnitCount() {
        $this->object->setWorkUnitCount(4000);
        $this->assertEquals(
                4000, $this->object->getWorkUnitCount()
        );
    }

    /**
     * @covers QuoteLineItem::get_workUnitCount
     */
    public function testShouldSuccessfullyReportLineItemUnitCount() {
        $this->assertEquals(
                33, $this->object->getWorkUnitCount()
        );
    }

    /**
     * @covers QuoteLineItem::get_workUnitType
     */
    public function testShouldSuccessfullyReportLineItemUnitType() {
        $this->assertEquals(
                "words", $this->object->getWorkUnitType()
        );
    }

    /**
     * @covers QuoteLineItem::set_RushFeePercentage
     */
    public function testShouldSuccessfullyReportLineItemRushFeePercentage() {
        $this->assertEquals(
                0.25, $this->object->getRushFeePercentage()
        );
        
        $this->assertEquals(
                false, $this->object->isCustomRushFeePercentage()
        );
        
        $this->object->setCustomRushFeePercentage(0.45);
        $this->assertEquals(
                0.45, $this->object->getRushFeePercentage()
        );
        
        $this->assertEquals(
                true, $this->object->isCustomRushFeePercentage()
        );
        
    }

    /**
     * @covers QuoteLineItem::get_DisplayName
     */
    public function testShouldSuccessfullyReportDisplayName() {
        $this->assertEquals(
                'TR+CE - Fuzzy Text', $this->object->getDisplayName()
        );
    }

    /**
     * @covers QuoteLineItem::get_DBReferenceName
     */
    public function testShouldSuccessfullyReportPricingDBColumnKey() {
        $this->assertEquals(
                'Translate_+_CopyEdit#FUZZY_TEXT#=Englisn_(US)=French_(France)', $this->object->getPricingDBColumnKey()
        );
    }

    public function testShouldProperlyReportItemDescription() {
        $this->assertEquals(
                'Hi match probability (> 85%)', $this->object->getDescription()
        );
    }
}

class QuoteInfoClass implements IQuoteItem {
    public function getCategory() {
        return "LinguistItem";
    }

    public function getId() {
        return "2222333";
    }

    public function getName() {
        return "A linguist Item";
    }

    public function getSourceLang() {
        return "Englisn (US)";
    }

    public function getTargetLang() {
        return "French (France)";
    }

}